import time
import psutil
import speedtest
from aiogram import Bot, types
from datetime import datetime
from loguru import logger

MB_FACTOR = 1024 * 1024  # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –±–∞–π—Ç—ñ–≤ —É –ú–ë
AVERAGE_PACKET_SIZE = 1500  # –°–µ—Ä–µ–¥–Ω—ñ–π —Ä–æ–∑–º—ñ—Ä –æ–¥–Ω–æ–≥–æ –º–µ—Ä–µ–∂–µ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ (–≤ –±–∞–π—Ç–∞—Ö)

STARTUP_TIME = None

def initialize_startup_time():
    """
    –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —á–∞—Å –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞, —è–∫—â–æ –≤—ñ–Ω —â–µ –Ω–µ –∑–∞–¥–∞–Ω–∏–π.
    """
    global STARTUP_TIME
    if STARTUP_TIME is None:
        STARTUP_TIME = datetime.now()

async def get_uptime() -> str:
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ç–µ, —Å–∫—ñ–ª—å–∫–∏ —á–∞—Å—É –±–æ—Ç –ø–µ—Ä–µ–±—É–≤–∞—î –æ–Ω–ª–∞–π–Ω.
    """
    global STARTUP_TIME
    if STARTUP_TIME is None:
        initialize_startup_time()
        return "–ë–æ—Ç —â–æ–π–Ω–æ –∑–∞–ø—É—Å—Ç–∏–≤—Å—è!"
    
    now = datetime.now()
    uptime_delta = now - STARTUP_TIME
    
    days = uptime_delta.days
    hours, remainder = divmod(uptime_delta.seconds, 3600)
    minutes, seconds = divmod(remainder, 60)
    
    return f"{days} –¥–Ω., {hours} –≥–æ–¥., {minutes} —Ö–≤., {seconds} —Å–µ–∫."

async def get_server_info() -> dict:
    """
    –ó–±–∏—Ä–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–∏—Å—Ç–µ–º—É: 
    ‚Ä¢ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö/–æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤,
    ‚Ä¢ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—ó –ø–∞–º‚Äô—è—Ç—ñ,
    ‚Ä¢ –∑–∞–≥–∞–ª—å–Ω–∏–π –æ–±—Å—è–≥ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—ó –ø–∞–º‚Äô—è—Ç—ñ,
    ‚Ä¢ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è CPU.
    
    –ü–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è —Å–ª–æ–≤–Ω–∏–∫ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏.
    """
    net_io = psutil.net_io_counters(pernic=True)
    
    if not net_io:
        raise ValueError("–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–µ—Ä–µ–∂–µ–≤–∏—Ö —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è.")

    # –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à–∏–π –¥–æ—Å—Ç—É–ø–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    interface = next(iter(net_io))
    io_data = net_io[interface]

    return {
        "packets_sent": io_data.packets_sent,
        "packets_recv": io_data.packets_recv,
        "ram_used": psutil.virtual_memory().used,
        "ram_total": psutil.virtual_memory().total,
        "cpu_load": psutil.cpu_percent()
    }

async def convert_packets_to_mb(sent_packets: int, received_packets: int) -> tuple[float, float]:
    """
    –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–∫–µ—Ç—ñ–≤ –Ω–∞ –ø—Ä–∏–±–ª–∏–∑–Ω–∏–π –æ–±—Å—è–≥ –ø–µ—Ä–µ–¥–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö (—É –ú–ë).
    –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —É—Å–µ—Ä–µ–¥–Ω–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É –æ–¥–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ (AVERAGE_PACKET_SIZE).
    """
    sent_bytes = sent_packets * AVERAGE_PACKET_SIZE
    received_bytes = received_packets * AVERAGE_PACKET_SIZE

    sent_mb = sent_bytes / MB_FACTOR
    received_mb = received_bytes / MB_FACTOR
    
    return sent_mb, received_mb

async def get_internet_speed() -> tuple[float, float, float]:
    """
    –í–∏–∫–æ–Ω—É—î –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —à–≤–∏–¥–∫–æ—Å—Ç—ñ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é speedtest.
    –ü–æ–≤–µ—Ä—Ç–∞—î —Ç—Ä—ñ–π–∫—É –∑–Ω–∞—á–µ–Ω—å:
    (—à–≤–∏–¥–∫—ñ—Å—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (–ú–±—ñ—Ç/—Å), —à–≤–∏–¥–∫—ñ—Å—Ç—å –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (–ú–±—ñ—Ç/—Å), –ø—ñ–Ω–≥ (–º—Å)).
    """
    st = speedtest.Speedtest()
    st.get_best_server()
    download_speed = st.download() / 1_000_000   # –±—ñ—Ç/—Å -> –ú–±—ñ—Ç/—Å
    upload_speed = st.upload() / 1_000_000       # –±—ñ—Ç/—Å -> –ú–±—ñ—Ç/—Å
    ping = st.results.ping                       # –º—Å
    return download_speed, upload_speed, ping

async def ping_command(message: types.Message, bot: Bot):
    """
    –ö–æ–º–∞–Ω–¥–∞ /ping –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞, —è–∫–∞:
    ‚Ä¢ –í–∏–º—ñ—Ä—é—î —á–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–æ—Ç–∞ (–∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è Pong).
    ‚Ä¢ –ó–±–∏—Ä–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤ —Å–µ—Ä–≤–µ—Ä–∞ (RAM, CPU).
    ‚Ä¢ –í–∏–≤–æ–¥–∏—Ç—å –ø—Ä–∏–±–ª–∏–∑–Ω–∏–π –æ–±—Å—è–≥ –ø–µ—Ä–µ–¥–∞–Ω–∏—Ö —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö (–æ—Ä—ñ—î–Ω—Ç—É—é—á–∏—Å—å –Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–∫–µ—Ç—ñ–≤).
    ‚Ä¢ –í–∏–∫–æ–Ω—É—î Speedtest –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —à–≤–∏–¥–∫–æ—Å—Ç—ñ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑‚Äô—î–¥–Ω–∞–Ω–Ω—è —Ç–∞ –æ–Ω–æ–≤–ª—é—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.
    """
    try:
        # –ó–∞–º—ñ—Ä —á–∞—Å—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–æ—Ç–∞
        start_time = time.time()
        temp_message = await message.answer("üèì Pong")
        end_time = time.time()
        response_time_ms = (end_time - start_time) * 1000

        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä
        server_info = await get_server_info()
        
        # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–∫–µ—Ç—ñ–≤ —É –ú–ë
        sent_mb, received_mb = await convert_packets_to_mb(
            server_info["packets_sent"], 
            server_info["packets_recv"]
        )
        
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –±–∞–∑–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
        initial_text = (
            f"üèì <b>Pong!</b>\n\n"
            f"–ß–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–æ—Ç–∞: <code>{response_time_ms:.2f} –º—Å</code>\n"
            f"–ü–µ—Ä–µ–¥–∞–Ω–æ –¥–∞–Ω–∏—Ö: <code>‚âà{sent_mb:.2f} –ú–ë</code>\n"
            f"–û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω–∏—Ö: <code>‚âà{received_mb:.2f} –ú–ë</code>\n"
            f"–ë–æ—Ç –ø—Ä–∞—Ü—é—î: <code>{await get_uptime()}</code>\n\n"
            f"üí° <b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä</b>:\n"
            f"–û–ü: <code>{server_info['ram_used'] // MB_FACTOR} / {server_info['ram_total'] // MB_FACTOR} –ú–ë</code>\n"
            f"CPU: <code>{server_info['cpu_load']:.2f}%</code>"
        )

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        info_message = await message.answer(initial_text)
        # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–í–∏–º—ñ—Ä—é—é –ø—ñ–Ω–≥..."
        await bot.delete_message(chat_id=message.chat.id, message_id=temp_message.message_id)

        # –í–∏–∫–æ–Ω—É—î–º–æ Speedtest
        download_speed, upload_speed, ping = await get_internet_speed()

        # –û–Ω–æ–≤–ª–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç
        final_text = (
            f"üèì <b>Pong!</b>\n\n"
            f"–ß–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–æ—Ç–∞: <code>{response_time_ms:.2f} –º—Å</code>\n"
            f"–ü–µ—Ä–µ–¥–∞–Ω–æ –¥–∞–Ω–∏—Ö: <code>‚âà{sent_mb:.2f} –ú–ë</code>\n"
            f"–û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω–∏—Ö: <code>‚âà{received_mb:.2f} –ú–ë</code>\n"
            f"–ë–æ—Ç –ø—Ä–∞—Ü—é—î: <code>{await get_uptime()}</code>\n\n"
            f"üåê <b>–®–≤–∏–¥–∫—ñ—Å—Ç—å —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É</b>:\n"
            f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: <code>{download_speed:.2f} –ú–±—ñ—Ç/—Å</code>\n"
            f"–í–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: <code>{upload_speed:.2f} –ú–±—ñ—Ç/—Å</code>\n"
            f"–ü—ñ–Ω–≥: <code>{ping} –º—Å</code>\n\n"
            f"üí° <b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä</b>:\n"
            f"–û–ü: <code>{server_info['ram_used'] // MB_FACTOR} / {server_info['ram_total'] // MB_FACTOR} –ú–ë</code>\n"
            f"CPU: <code>{server_info['cpu_load']:.2f}%</code>"
        )

        # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ Speedtest
        await bot.edit_message_text(
            chat_id=info_message.chat.id,
            message_id=info_message.message_id,
            text=final_text
        )

    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤ ping_command: {e}")
        await message.answer("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ /ping. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞.")


# —â–æ–± –∑–∞—Ñ—ñ–∫—Å—É–≤–∞—Ç–∏ —á–∞—Å –∑–∞–ø—É—Å–∫—É:
initialize_startup_time()
